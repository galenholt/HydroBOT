% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_types.R
\name{plot_map}
\alias{plot_map}
\title{Title}
\usage{
plot_map(
  prepped,
  underlay_list,
  overlay_list,
  map_outlinecolor = "grey35",
  outcome_lab,
  facet_wrapper,
  facet_row,
  facet_col,
  sceneorder,
  transoutcome,
  setLimits,
  base_list
)
}
\arguments{
\item{prepped}{prepared data from \code{plot_data_prep() |>  plot_style_prep()}}

\item{underlay_list}{default NULL, otherwise named list (or list of named
lists for multiple underlay levels) of arguments to plot a map underlying
the main map data. Only required value is either \code{'underlay'} or
\code{'underover'} (interchangeable), defining the data to be plotted. Other
arguments as for the main plot. Typical examples
\itemize{
\item \code{underlay_list = 'basin'} simply plot the basin outline
\item \code{underlay_list = list(underlay = 'basin', pal_list = 'azure')} same, but filled
\item \code{underlay_list = list(underlay = outputs_on_sdl_scale, outcome_col = ewr_achieved, pal_list = 'scico::oslo')} plot the ewr outcomes in the sdls
A named palette (e.g. variation in color/fill) only works if the main data
is not the same type- we can't use different palettes for underlay fill and
main data fill, for example, but can if the underlay is fill (polygons) and
the main data is points.
}}

\item{overlay_list}{as \code{underlay_list}, but first item might be named
\verb{"overlay} or \code{"underover"}}

\item{map_outlinecolor}{color specification for the outline of filled areas
on maps. Default 'grey35' seems to be the sf default. NA removes the
outline.}

\item{outcome_lab}{character, default \code{outcome_col}, allows changing label of
the outcome_col (y-axis or color/fill)}

\item{facet_wrapper}{NULL (default) or character for column to use for
\code{facet_wrap}}

\item{facet_row}{NULL (default) or character for facet row. Can be \code{'.'} to
have one row and column-facets}

\item{facet_col}{NULL (default) or character for facet column. Can be \code{'.'}
to have one column and row-facets}

\item{sceneorder}{Default NULL, otherwise, character or factor giving the
order to present scenario levels}

\item{transoutcome}{transformation for outcome as in
\code{\link[ggplot2:scale_continuous]{ggplot2::scale_y_continuous()}} or \code{\link[ggplot2:scale_colour_continuous]{ggplot2::scale_fill_continuous()}}.
Default \code{transoutcome = 'identity'} just uses the data. Most common change
likely \verb{transoutcome = 'log10}}

\item{setLimits}{sets user-supplied color/fill limits or midpoints for maps,
heatmaps, and networks, or y limits for other plots. Also sets \code{underlay}
and \code{overlay} limits for consistency.
\itemize{
\item NULL (default) use internally-calculated limits
\item length-1 numeric, sets midpoint, limits stay auto-calculated. V. useful for divergent
\item length-2 numeric, sets lower and upper limits
\item length-3 numeric, sets limits and midpoint \code{c(lower, mid, upper)}, with caveat that one limit may be ignored (must be symmetrical about the midpoint)
\item if base_list is 'difference' or 'relative', midpoints are auto-set at 0 or 1 (respectively) unless otherwise specified here.
}}

\item{base_list}{NULL (default) or named list of arguments to
\code{\link[=baseline_compare]{baseline_compare()}};
\itemize{
\item base_lev
\item comp_fun
\item group_cols
\code{\link[=plot_data_prep]{plot_data_prep()}} handles \code{zero_adjust}, and other arguments are inferred
or not supported If \code{comp_fun} is 'difference' or 'relative', midpoint
auto-set at 0 or 1 respectively unless otherwise specified with \code{setLimits}
}}
}
\value{
ggplot object
}
\description{
Plots a standard map, with potentially underlay and overlays, specified by
\code{underlay_list} and \code{overlay_list}. These are recursed through the
\verb{plot_*_prep()} functions so the transes and other changes are consistent
across the layers. There are some inherent limitations about color/fill and
points/polygons due to masking and use of multiple color/fill ramps
}
