% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/temporal_aggregate.R
\name{temporal_aggregate}
\alias{temporal_aggregate}
\title{Aggregate along the time dimension}
\usage{
temporal_aggregate(
  dat,
  breaks = "all_time",
  timecol = "infer",
  groupers,
  aggCols,
  funlist,
  geonames = NULL,
  prefix = "temporal_",
  failmissing = TRUE,
  auto_ewr_PU = FALSE,
  ...
)
}
\arguments{
\item{dat}{sf or tibble or dataframe of values to aggregate, with necessary
grouping information for non-temporal axes (e.g. scenario, location, theme). \emph{Not}
necessarily the same as \code{data} in \code{\link[=general_aggregate]{general_aggregate()}}- this function
makes necessary adjustments to the data before calling
\code{\link[=general_aggregate]{general_aggregate()}}}

\item{breaks}{breaks for the time groupings. default 'all_time' collapses over the whole period, otherwise as in \code{\link[base:cut.POSIXt]{base::cut.POSIXt()}} (takes the character options there, or time objects)}

\item{timecol}{name of the column with time in it. Default 'infer' infers which it is by looking for POSIXt or Date types.}

\item{groupers}{as in \code{\link[=general_aggregate]{general_aggregate()}}, with the note that these should
be all grouping columns \emph{except} any spatial information. Spatial information is automatically added to
\code{groupers} before passing to \code{\link[=general_aggregate]{general_aggregate()}}.}

\item{aggCols}{an expression for the columns to aggregate (the data columns).
See \code{selectcreator} for formats}

\item{funlist}{a list of functions and their arguments used to aggregate the
data. See \code{functionlister} for creation in many cases. The situation with a
bare anonymous function, e.g. \code{~mean(., na.rm = T)} is not supported
because we need a name. Use a named list if using anonymous functions, e.g.
\code{list(mean = ~mean(., na.rm = T))}. \emph{If using functions with a
data-variable argument}, e.g. weighted.mean with a column of weights, we
now (as of {dplyr} 1.1) have some workarounds. One option is if specified
\emph{as a function argument}, the function can just go in as a bare name or
anonymous. If specified elsewhere, it can be wrapped in \code{\link[rlang:defusing-advanced]{rlang::quo()}},
e.g. \code{agglist <- rlang::quo(list(mean = mean, wm = ~weighted.mean(., weight_column_name, na.rm = T)))}. If it isn't, there is now an internal
workaround to add that on that seems to be stable but may cause unforeseen
issues. This workaround also allows building custom aggregation functions
(not-anonymous) with the data-variable argument either exposed or hardcoded
(see \code{\link[=SpatialWeightedMean]{SpatialWeightedMean()}}). The error checks for names do not work for
quosures, so make sure you name the list if using \code{\link[rlang:defusing-advanced]{rlang::quo()}}.}

\item{geonames}{additional columns of information to persist through the
aggregation. Cannot change with the main \code{groupers}. Developed to persist
information about polygons through subsequent theme aggregations, but could
be more general}

\item{prefix}{prefix character, differs from \code{\link[=general_aggregate]{general_aggregate()}} in that default
is \code{'temporal_'} instead of \code{'agg_'}.}

\item{failmissing}{logical, default \code{TRUE}: fail if the requested grouping or
aggregation columns not exist. If \code{FALSE}, proceed with those that do exist
and silently drop those that don't. Similar to \code{tidyselect::all_of()} vs
\code{tidyselect::any_of()} in \code{tidyselect}}

\item{auto_ewr_PU}{logical, default FALSE. If TRUE, automatically infers
whether this is an EWR dataset and has not yet been spatially aggregated.
If so, applies grouping by 'planning_unit_name'. The preferred solution is
to include it in \code{groupers} here (for on-off), or in \code{\link[=multi_aggregate]{multi_aggregate()}} to
use \code{group_until}. If none of those solutions happen, though, it aborts to
prevent incorrect pooling over planning units.}

\item{...}{arguments passed to the aggregation functions. This is \emph{very}
limited, and does not work with data arguments under most conditions.
Almost always better to specify explicitly when building \code{funlist}, but
works OK with simple functions, e.g. passing \code{na.rm = TRUE} to mean}
}
\description{
Takes data with a column in a time format (posix or date) and aggregates into groups defined by \code{breaks} while retaining theme and spatial information. Much of the setup and checks mirrors that of \code{\link[=theme_aggregate]{theme_aggregate()}} and \code{\link[=spatial_aggregate]{spatial_aggregate()}}, and then passes to \code{\link[=general_aggregate]{general_aggregate()}}.
}
