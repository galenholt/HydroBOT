% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_types.R
\name{make_underover}
\alias{make_underover}
\title{Helper for plot_map. Essentially recurses it to do the underlay and overlay
lists}
\usage{
make_underover(
  underover_list,
  outcome_plot,
  sceneorder,
  outcome_lab,
  maindata,
  maindatatype,
  maincolorpal,
  transoutcome,
  setLimits,
  base_list,
  uotype = "internal"
)
}
\arguments{
\item{underover_list}{List of layers to put either under or over the main layer}

\item{outcome_plot}{The plot, as it stands before the layers in \code{underover_list} are added}

\item{sceneorder}{Default NULL, otherwise, character or factor giving the
order to present scenario levels}

\item{outcome_lab}{character, default \code{outcome_col}, allows changing label of
the outcome_col (y-axis or color/fill)}

\item{maindata}{The data going into the primary ('main') layer}

\item{maindatatype}{character, 'point' (point, multipoint) or 'areal' (polygon, multipolygon) used to know if the main layer uses a color (if 'point') or fill (if 'areal') aes}

\item{maincolorpal}{palette for the main data}

\item{transoutcome}{transformation for outcome as in
\code{\link[ggplot2:scale_continuous]{ggplot2::scale_y_continuous()}} or \code{\link[ggplot2:scale_colour_continuous]{ggplot2::scale_fill_continuous()}}.
Default \code{transoutcome = 'identity'} just uses the data. Most common change
likely \verb{transoutcome = 'log10}}

\item{setLimits}{sets user-supplied color/fill limits or midpoints for maps,
heatmaps, and networks, or y limits for other plots. Also sets \code{underlay}
and \code{overlay} limits for consistency.
\itemize{
\item NULL (default) use internally-calculated limits
\item length-1 numeric, sets midpoint, limits stay auto-calculated. V. useful for divergent
\item length-2 numeric, sets lower and upper limits
\item length-3 numeric, sets limits and midpoint \code{c(lower, mid, upper)}, with caveat that one limit may be ignored (must be symmetrical about the midpoint)
\item if base_list is 'difference' or 'relative', midpoints are auto-set at 0 or 1 (respectively) unless otherwise specified here.
}}

\item{base_list}{NULL (default) or named list of arguments to
\code{\link[=baseline_compare]{baseline_compare()}};
\itemize{
\item base_lev
\item comp_fun
\item group_cols
\code{\link[=plot_data_prep]{plot_data_prep()}} handles \code{zero_adjust}, and other arguments are inferred or
not supported
If \code{comp_fun} is 'difference' or 'relative', midpoint auto-set at 0 or 1
respectively unless otherwise specified with \code{setLimits}
}}

\item{uotype}{character, 'overlay', 'underlay', or 'internal' (default, it is an item in 'underover_list'). Not used, except for compatibility}
}
\value{
ggplot object composed of stacked maps according to underover_list
}
\description{
This gets run once each for under and overlays. It is itself agnostic to
whether it is under or over the 'main' plot.
}
