% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_aggregate.R
\name{spatial_aggregate}
\alias{spatial_aggregate}
\title{Aggregate along spatial dimension}
\usage{
spatial_aggregate(
  dat,
  to_geo,
  groupers,
  aggCols,
  funlist,
  ...,
  whichcrs = st_crs(to_geo),
  keepAllPolys = FALSE,
  failmissing = TRUE,
  prefix = "spatial_"
)
}
\arguments{
\item{dat}{sf of values to aggregate with any necessary non-spatial
grouping information (e.g. scenario, theme)}

\item{to_geo}{sf polygon or multipolygon that provides the desired spatial
level to group into. This uses the intersection \code{\link[sf:geos_binary_ops]{sf::st_intersection()}}, so
if \code{dat} and \code{to_geo} are both polygons, they do not have to be
nested.}

\item{groupers}{as in \code{\link{general_aggregate}}, with the note that these should
be all grouping columns \emph{except} the polygons in \code{to_geo}, which are
automatically added to \code{groupers} before passing to \code{general_aggregate}.}

\item{aggCols}{an expression for the columns to aggregate (the data columns).
See \code{selectcreator} for formats}

\item{funlist}{a list of functions and their arguments used to aggregate the
data. See \code{functionlister} for creation in many cases.}

\item{...}{arguments passed to the aggregation functions. Almost always better to specify
explicitly when building \code{funlist}, but works OK with simple functions}

\item{whichcrs}{desired coordinate reference system, easiest is just the
numeric EPSG code, but could a full crs definition. See \code{\link[sf:st_crs]{sf::st_crs()}}}

\item{failmissing}{logical, default \code{TRUE}: fail if the requested grouping or
aggregation columns not exist. If \code{FALSE}, proceed with those that do exist
and silently drop those that don't. Similar to \code{tidyselect::all_of()} vs \code{tidyselect::any_of()} in
\code{tidyselect}}

\item{prefix}{character, differs from \code{general_aggregate} in that default is
\code{'spatial_'} instead of \code{'agg_'}.}

\item{keepAllPoly}{logical, default \code{FALSE}. Should polygons in \code{to_geo} that
have no values in \code{dat} be retained? The default \code{FALSE} keeps NA
polygons from cluttering things up, but \code{TRUE} is very useful to not lose
them, especially for later plotting.}
}
\value{
an \code{sf} with columns for the grouping variables aggregated into the
polygons in \code{to_geo} and retaining desired theme-level information
}
\description{
Takes geographic data (points or polygons), and aggregates into polygons,
while retaining theme-level information. This function sets up the data with
specific prep for the way the spatial dimension works, and then wraps
\code{general_aggregate}. Many of the arguments here are just passed through to
general aggregate.
}
