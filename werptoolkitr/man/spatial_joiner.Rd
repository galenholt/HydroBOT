% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_joiner.R
\name{spatial_joiner}
\alias{spatial_joiner}
\title{Joins spatial from and to \code{sf} objects with needed data prep for the
aggregate functions}
\usage{
spatial_joiner(from_geo, to_geo, whichcrs)
}
\arguments{
\item{from_geo}{\code{sf} of the input data to be aggregated}

\item{to_geo}{\code{sf} of the polygons or multipolygons to aggregate into}

\item{whichcrs}{desired crs. Either the numeric EPSG or a crs definition, as
from \code{st_crs()}}
}
\value{
tibble (\emph{not} \code{sf}) with a \code{polyID} column mapping each row to it's
relevant polygon in \code{polyID} and an \code{area} column for the area of each
polygon resulting from the intersection of \code{from_geo} and \code{to_geo}. Rows do
not match \code{to_geo} because \code{to_geo} is intersected with \code{from_geo}, and so
each row is a unique combination of the two (\code{from_geo} rows may be
duplicated across several \code{to_geo} polygons). Each of these unique polygons
has the \code{area} calculated and added as a column. The geometry is dropped
for speed, and expected to add back in later with a \code{dplyr::left_join} to \code{to_geo}
after aggregation or other processing.
}
\description{
This ensures the polygons have the same crs, are valid, optimises the
\code{st_intersection}, calculates an \code{area} column for future use, and drops
geometry while retaining the \code{polyID} from the \code{from_geo} as a grouper for
further aggregation and later re-joining to the geometry
}
